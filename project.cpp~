#include <iostream>
#include <vector>
#include <string>
#include <dirent.h>
#include "cv.h"
#include "highgui.h"
#include "project.h"
#include "read.h"
#include "align.h"

using namespace cv;

Tournament::Tournament(std::vector<std::string>& s) {
  loadScans(s);
}

Tournament::Tournament(std::string dir) {
  loadScans(dir);
}

void Tournament::loadScans(std::vector<std::string> s) {
  Mat m;
  for(int i=0; i<s.size(); i++) {
    m = imread(s[i]);
    pyrDown(m, m, Size(m.cols/2, m.rows/2));
    align(m, m);
    crop(m, m);
    srcs.push_back(m);
  }
}

void Tournament::loadScans(std::string dir) {
  std::vector<std::string> s;
  getDir(dir, s);
  loadScans(s);
}

int getDir (std::string dir, std::vector<std::string> &files) {
  DIR *dp;
  struct dirent *dirp;
  if((dp  = opendir(dir.c_str())) == NULL) {
    std::cout << "Error opening " << dir << std::endl;
    return 1;
  }
  
  while ((dirp = readdir(dp)) != NULL) {
    files.push_back(string(dirp->d_name));
  }
  closedir(dp);
  return 0;
}

